Traceback (most recent call last):
  File "/usr/local/lib/python3.10/dist-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/local/lib/python3.10/dist-packages/jupyter_core/utils/__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/local/lib/python3.10/dist-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
def get_data(url):
  data_page = []
  response = requests.get(url)
  if response.status_code == 200:
    page = BeautifulSoup(response.content)
    container_content = page.find('li', {"data-id" : "id-1"})
    header_page = container_content.find('div', {"style" : "float:left; width:540px;"})

    #  Mengambil judul TA
    get_title = header_page.find('a', class_ = 'title').text.strip().split('\r\n')
    title = " ".join(get_title)
    data_page.append(title)

    # Mengambil Penulis dan juga Dospem
    creator = header_page.find_all('span')
    for i in creator:
      splitting_text = i.text.strip().split(':')
      if splitting_text[0].strip() == 'Penulis':
        data_page.append(splitting_text[1].strip())
      elif splitting_text[0].strip() == 'Dosen Pembimbing I':
        data_page.append(splitting_text[1].strip())
      else:
        data_page.append(splitting_text[1].strip())

    # Mengambil Abstrak
    get_abstrak = container_content.find('p', {"align" : "justify"}).text.strip().split('\r\n')
    abstrak = " ".join(get_abstrak)
    data_page.append(abstrak)

  return data_page


def crawling_pta(url):
  hasil_crawling = []
  response = requests.get(url)
  if response.status_code == 200:
    page = BeautifulSoup(response.content)
    container_content = page.find('ul', class_= 'items')
    list_content = container_content.find_all('li')

    for content in list_content:
      view_button = content.find('a', class_ = 'gray button').get('href')
      hasil_crawling.append(get_data(view_button))

    next_page = page.find_all('a', class_='pag_button')
    for i in next_page:
      if i.text.strip() == '>':
        return (hasil_crawling, i.get('href'))

def main(url, num_page):
  content, next_page = crawling_pta(url)

  for i in range(num_page-1):
    more_content, next_page = crawling_pta(next_page)
    content += more_content

  with open('crawling_pta.csv', mode='w', newline='') as file:
    writer = csv.writer(file)
    writer.writerow(['Judul', 'Penulis', 'Dosen Pembimbing I', 'Dosen Pembimbing II', 'Abstrak'])
    writer.writerows(content)

  print(f'Data Berhasil Di Simpan Kedalam File crawling_pta.csv Dengan Jumlah : {len(content)} Data')

main('https://pta.trunojoyo.ac.id/c_search/byprod/10', 100)
------------------


[0;31m[0m
[0;31mKeyboardInterrupt[0mTraceback (most recent call last)
[0;32m<ipython-input-3-f8cbcd131ae1>[0m in [0;36m<cell line: 64>[0;34m()[0m
[1;32m     62[0m   [0mprint[0m[0;34m([0m[0;34mf'Data Berhasil Di Simpan Kedalam File crawling_pta.csv Dengan Jumlah : {len(content)} Data'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     63[0m [0;34m[0m[0m
[0;32m---> 64[0;31m [0mmain[0m[0;34m([0m[0;34m'https://pta.trunojoyo.ac.id/c_search/byprod/10'[0m[0;34m,[0m [0;36m100[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m
[0;32m<ipython-input-3-f8cbcd131ae1>[0m in [0;36mmain[0;34m(url, num_page)[0m
[1;32m     52[0m [0;34m[0m[0m
[1;32m     53[0m   [0;32mfor[0m [0mi[0m [0;32min[0m [0mrange[0m[0;34m([0m[0mnum_page[0m[0;34m-[0m[0;36m1[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 54[0;31m     [0mmore_content[0m[0;34m,[0m [0mnext_page[0m [0;34m=[0m [0mcrawling_pta[0m[0;34m([0m[0mnext_page[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     55[0m     [0mcontent[0m [0;34m+=[0m [0mmore_content[0m[0;34m[0m[0;34m[0m[0m
[1;32m     56[0m [0;34m[0m[0m

[0;32m<ipython-input-3-f8cbcd131ae1>[0m in [0;36mcrawling_pta[0;34m(url)[0m
[1;32m     33[0m [0;32mdef[0m [0mcrawling_pta[0m[0;34m([0m[0murl[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     34[0m   [0mhasil_crawling[0m [0;34m=[0m [0;34m[[0m[0;34m][0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 35[0;31m   [0mresponse[0m [0;34m=[0m [0mrequests[0m[0;34m.[0m[0mget[0m[0;34m([0m[0murl[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     36[0m   [0;32mif[0m [0mresponse[0m[0;34m.[0m[0mstatus_code[0m [0;34m==[0m [0;36m200[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     37[0m     [0mpage[0m [0;34m=[0m [0mBeautifulSoup[0m[0;34m([0m[0mresponse[0m[0;34m.[0m[0mcontent[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/requests/api.py[0m in [0;36mget[0;34m(url, params, **kwargs)[0m
[1;32m     71[0m     """
[1;32m     72[0m [0;34m[0m[0m
[0;32m---> 73[0;31m     [0;32mreturn[0m [0mrequest[0m[0;34m([0m[0;34m"get"[0m[0;34m,[0m [0murl[0m[0;34m,[0m [0mparams[0m[0;34m=[0m[0mparams[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     74[0m [0;34m[0m[0m
[1;32m     75[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/requests/api.py[0m in [0;36mrequest[0;34m(method, url, **kwargs)[0m
[1;32m     57[0m     [0;31m# cases, and look like a memory leak in others.[0m[0;34m[0m[0;34m[0m[0m
[1;32m     58[0m     [0;32mwith[0m [0msessions[0m[0;34m.[0m[0mSession[0m[0;34m([0m[0;34m)[0m [0;32mas[0m [0msession[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 59[0;31m         [0;32mreturn[0m [0msession[0m[0;34m.[0m[0mrequest[0m[0;34m([0m[0mmethod[0m[0;34m=[0m[0mmethod[0m[0;34m,[0m [0murl[0m[0;34m=[0m[0murl[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     60[0m [0;34m[0m[0m
[1;32m     61[0m [0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/requests/sessions.py[0m in [0;36mrequest[0;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[1;32m    587[0m         }
[1;32m    588[0m         [0msend_kwargs[0m[0;34m.[0m[0mupdate[0m[0;34m([0m[0msettings[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 589[0;31m         [0mresp[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mprep[0m[0;34m,[0m [0;34m**[0m[0msend_kwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    590[0m [0;34m[0m[0m
[1;32m    591[0m         [0;32mreturn[0m [0mresp[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/requests/sessions.py[0m in [0;36msend[0;34m(self, request, **kwargs)[0m
[1;32m    701[0m [0;34m[0m[0m
[1;32m    702[0m         [0;31m# Send the request[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 703[0;31m         [0mr[0m [0;34m=[0m [0madapter[0m[0;34m.[0m[0msend[0m[0;34m([0m[0mrequest[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    704[0m [0;34m[0m[0m
[1;32m    705[0m         [0;31m# Total elapsed time of the request (approximately)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/requests/adapters.py[0m in [0;36msend[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    484[0m [0;34m[0m[0m
[1;32m    485[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 486[0;31m             resp = conn.urlopen(
[0m[1;32m    487[0m                 [0mmethod[0m[0;34m=[0m[0mrequest[0m[0;34m.[0m[0mmethod[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    488[0m                 [0murl[0m[0;34m=[0m[0murl[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/urllib3/connectionpool.py[0m in [0;36murlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)[0m
[1;32m    788[0m [0;34m[0m[0m
[1;32m    789[0m             [0;31m# Make the request on the HTTPConnection object[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 790[0;31m             response = self._make_request(
[0m[1;32m    791[0m                 [0mconn[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m
[1;32m    792[0m                 [0mmethod[0m[0;34m,[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/urllib3/connectionpool.py[0m in [0;36m_make_request[0;34m(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)[0m
[1;32m    534[0m         [0;31m# Receive the response from the server[0m[0;34m[0m[0;34m[0m[0m
[1;32m    535[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 536[0;31m             [0mresponse[0m [0;34m=[0m [0mconn[0m[0;34m.[0m[0mgetresponse[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    537[0m         [0;32mexcept[0m [0;34m([0m[0mBaseSSLError[0m[0;34m,[0m [0mOSError[0m[0;34m)[0m [0;32mas[0m [0me[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    538[0m             [0mself[0m[0;34m.[0m[0m_raise_timeout[0m[0;34m([0m[0merr[0m[0;34m=[0m[0me[0m[0;34m,[0m [0murl[0m[0;34m=[0m[0murl[0m[0;34m,[0m [0mtimeout_value[0m[0;34m=[0m[0mread_timeout[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.10/dist-packages/urllib3/connection.py[0m in [0;36mgetresponse[0;34m(self)[0m
[1;32m    459[0m [0;34m[0m[0m
[1;32m    460[0m         [0;31m# Get the response from http.client.HTTPConnection[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 461[0;31m         [0mhttplib_response[0m [0;34m=[0m [0msuper[0m[0;34m([0m[0;34m)[0m[0;34m.[0m[0mgetresponse[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    462[0m [0;34m[0m[0m
[1;32m    463[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3.10/http/client.py[0m in [0;36mgetresponse[0;34m(self)[0m
[1;32m   1373[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1374[0m             [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1375[0;31m                 [0mresponse[0m[0;34m.[0m[0mbegin[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1376[0m             [0;32mexcept[0m [0mConnectionError[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1377[0m                 [0mself[0m[0;34m.[0m[0mclose[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3.10/http/client.py[0m in [0;36mbegin[0;34m(self)[0m
[1;32m    316[0m         [0;31m# read until we get a non-100 response[0m[0;34m[0m[0;34m[0m[0m
[1;32m    317[0m         [0;32mwhile[0m [0;32mTrue[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 318[0;31m             [0mversion[0m[0;34m,[0m [0mstatus[0m[0;34m,[0m [0mreason[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_read_status[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    319[0m             [0;32mif[0m [0mstatus[0m [0;34m!=[0m [0mCONTINUE[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    320[0m                 [0;32mbreak[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3.10/http/client.py[0m in [0;36m_read_status[0;34m(self)[0m
[1;32m    277[0m [0;34m[0m[0m
[1;32m    278[0m     [0;32mdef[0m [0m_read_status[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 279[0;31m         [0mline[0m [0;34m=[0m [0mstr[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mfp[0m[0;34m.[0m[0mreadline[0m[0;34m([0m[0m_MAXLINE[0m [0;34m+[0m [0;36m1[0m[0;34m)[0m[0;34m,[0m [0;34m"iso-8859-1"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    280[0m         [0;32mif[0m [0mlen[0m[0;34m([0m[0mline[0m[0;34m)[0m [0;34m>[0m [0m_MAXLINE[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    281[0m             [0;32mraise[0m [0mLineTooLong[0m[0;34m([0m[0;34m"status line"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3.10/socket.py[0m in [0;36mreadinto[0;34m(self, b)[0m
[1;32m    703[0m         [0;32mwhile[0m [0;32mTrue[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    704[0m             [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 705[0;31m                 [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_sock[0m[0;34m.[0m[0mrecv_into[0m[0;34m([0m[0mb[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    706[0m             [0;32mexcept[0m [0mtimeout[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    707[0m                 [0mself[0m[0;34m.[0m[0m_timeout_occurred[0m [0;34m=[0m [0;32mTrue[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3.10/ssl.py[0m in [0;36mrecv_into[0;34m(self, buffer, nbytes, flags)[0m
[1;32m   1272[0m                   [0;34m"non-zero flags not allowed in calls to recv_into() on %s"[0m [0;34m%[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1273[0m                   self.__class__)
[0;32m-> 1274[0;31m             [0;32mreturn[0m [0mself[0m[0;34m.[0m[0mread[0m[0;34m([0m[0mnbytes[0m[0;34m,[0m [0mbuffer[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1275[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1276[0m             [0;32mreturn[0m [0msuper[0m[0;34m([0m[0;34m)[0m[0;34m.[0m[0mrecv_into[0m[0;34m([0m[0mbuffer[0m[0;34m,[0m [0mnbytes[0m[0;34m,[0m [0mflags[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3.10/ssl.py[0m in [0;36mread[0;34m(self, len, buffer)[0m
[1;32m   1128[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1129[0m             [0;32mif[0m [0mbuffer[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1130[0;31m                 [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_sslobj[0m[0;34m.[0m[0mread[0m[0;34m([0m[0mlen[0m[0;34m,[0m [0mbuffer[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1131[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1132[0m                 [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_sslobj[0m[0;34m.[0m[0mread[0m[0;34m([0m[0mlen[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;31mKeyboardInterrupt[0m: 

